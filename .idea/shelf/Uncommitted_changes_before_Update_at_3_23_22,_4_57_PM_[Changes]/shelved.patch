Index: src/edu/ufl/cise/plc/SymbolTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.ufl.cise.plc;\n\nimport edu.ufl.cise.plc.ast.Declaration;\n\nimport java.util.HashMap;\n\npublic class SymbolTable {\n\n    // TODO:  Implement a symbol table class that is appropriate for this language.\n    HashMap<String, Declaration> entries = new HashMap<>();\n\n    public boolean insert(String name, Declaration dec) {\n        return entries.putIfAbsent(name, dec) == null;\n    }\n\n    public Declaration lookup(String name) {\n        return entries.get(name);\n    }\n\n\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/edu/ufl/cise/plc/SymbolTable.java b/src/edu/ufl/cise/plc/SymbolTable.java
--- a/src/edu/ufl/cise/plc/SymbolTable.java	(revision 70767c5f548c1cdc60254f9ed0708f41ce556b18)
+++ b/src/edu/ufl/cise/plc/SymbolTable.java	(date 1647995893151)
@@ -17,6 +17,10 @@
         return entries.get(name);
     }
 
+    public boolean contains(String name) {
+        return entries.containsKey(name);
+    }
+
 
 }
 
Index: src/edu/ufl/cise/plc/TypeCheckVisitor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.ufl.cise.plc;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport edu.ufl.cise.plc.IToken.Kind;\nimport edu.ufl.cise.plc.ast.ASTNode;\nimport edu.ufl.cise.plc.ast.ASTVisitor;\nimport edu.ufl.cise.plc.ast.AssignmentStatement;\nimport edu.ufl.cise.plc.ast.BinaryExpr;\nimport edu.ufl.cise.plc.ast.BooleanLitExpr;\nimport edu.ufl.cise.plc.ast.ColorConstExpr;\nimport edu.ufl.cise.plc.ast.ColorExpr;\nimport edu.ufl.cise.plc.ast.ConditionalExpr;\nimport edu.ufl.cise.plc.ast.ConsoleExpr;\nimport edu.ufl.cise.plc.ast.Declaration;\nimport edu.ufl.cise.plc.ast.Dimension;\nimport edu.ufl.cise.plc.ast.Expr;\nimport edu.ufl.cise.plc.ast.FloatLitExpr;\nimport edu.ufl.cise.plc.ast.IdentExpr;\nimport edu.ufl.cise.plc.ast.IntLitExpr;\nimport edu.ufl.cise.plc.ast.NameDef;\nimport edu.ufl.cise.plc.ast.NameDefWithDim;\nimport edu.ufl.cise.plc.ast.PixelSelector;\nimport edu.ufl.cise.plc.ast.Program;\nimport edu.ufl.cise.plc.ast.ReadStatement;\nimport edu.ufl.cise.plc.ast.ReturnStatement;\nimport edu.ufl.cise.plc.ast.StringLitExpr;\nimport edu.ufl.cise.plc.ast.Types.Type;\nimport edu.ufl.cise.plc.ast.UnaryExpr;\nimport edu.ufl.cise.plc.ast.UnaryExprPostfix;\nimport edu.ufl.cise.plc.ast.VarDeclaration;\nimport edu.ufl.cise.plc.ast.WriteStatement;\n\nimport static edu.ufl.cise.plc.ast.Types.Type.*;\n\npublic class TypeCheckVisitor implements ASTVisitor {\n\n\tSymbolTable symbolTable = new SymbolTable();  \n\tProgram root;\n\t\n\trecord Pair<T0,T1>(T0 t0, T1 t1) {\n\n\t};  // may be useful for constructing lookup tables.\n\t\n\tprivate void check(boolean condition, ASTNode node, String message) throws TypeCheckException {\n\t\tif (!condition) {\n\t\t\tthrow new TypeCheckException(message, node.getSourceLoc());\n\t\t}\n\t}\n\t\n\t//The type of a BooleanLitExpr is always BOOLEAN.  \n\t//Set the type in AST Node for later passes (code generation)\n\t//Return the type for convenience in this visitor.  \n\t@Override\n\tpublic Object visitBooleanLitExpr(BooleanLitExpr booleanLitExpr, Object arg) throws Exception {\n\t\tbooleanLitExpr.setType(Type.BOOLEAN);\n\t\treturn Type.BOOLEAN;\n\t}\n\n\t@Override\n\tpublic Object visitStringLitExpr(StringLitExpr stringLitExpr, Object arg) throws Exception {\n\t\tstringLitExpr.setType(Type.STRING);\n\t\treturn Type.STRING;\n\t}\n\n\t@Override\n\tpublic Object visitIntLitExpr(IntLitExpr intLitExpr, Object arg) throws Exception {\n\t\tintLitExpr.setType(Type.INT);\n\t\treturn Type.INT;\n\t}\n\n\t@Override\n\tpublic Object visitFloatLitExpr(FloatLitExpr floatLitExpr, Object arg) throws Exception {\n\t\tfloatLitExpr.setType(Type.FLOAT);\n\t\treturn Type.FLOAT;\n\t}\n\n\t@Override\n\tpublic Object visitColorConstExpr(ColorConstExpr colorConstExpr, Object arg) throws Exception {\n\t\tcolorConstExpr.setType(Type.COLOR);\n\t\treturn Type.COLOR;\n\t}\n\n\t@Override\n\tpublic Object visitConsoleExpr(ConsoleExpr consoleExpr, Object arg) throws Exception {\n\t\tconsoleExpr.setType(Type.CONSOLE);\n\t\treturn Type.CONSOLE;\n\t}\n\t\n\t//Visits the child expressions to get their type (and ensure they are correctly typed)\n\t//then checks the given conditions.\n\t@Override\n\tpublic Object visitColorExpr(ColorExpr colorExpr, Object arg) throws Exception {\n\t\tType redType = (Type) colorExpr.getRed().visit(this, arg);\n\t\tType greenType = (Type) colorExpr.getGreen().visit(this, arg);\n\t\tType blueType = (Type) colorExpr.getBlue().visit(this, arg);\n\t\tcheck(redType == greenType && redType == blueType, colorExpr, \"color components must have same type\");\n\t\tcheck(redType == Type.INT || redType == Type.FLOAT, colorExpr, \"color component type must be int or float\");\n\t\tType exprType = (redType == Type.INT) ? Type.COLOR : Type.COLORFLOAT;\n\t\tcolorExpr.setType(exprType);\n\t\treturn exprType;\n\t}\t\n\n\t\n\t\n\t//Maps forms a lookup table that maps an operator expression pair into result type.  \n\t//This more convenient than a long chain of if-else statements. \n\t//Given combinations are legal; if the operator expression pair is not in the map, it is an error. \n\tMap<Pair<Kind,Type>, Type> unaryExprs = Map.of(\n\t\t\tnew Pair<Kind,Type>(Kind.BANG,BOOLEAN), BOOLEAN,\n\t\t\tnew Pair<Kind,Type>(Kind.MINUS, FLOAT), FLOAT,\n\t\t\tnew Pair<Kind,Type>(Kind.MINUS, INT),INT,\n\t\t\tnew Pair<Kind,Type>(Kind.COLOR_OP,INT), INT,\n\t\t\tnew Pair<Kind,Type>(Kind.COLOR_OP,COLOR), INT,\n\t\t\tnew Pair<Kind,Type>(Kind.COLOR_OP,IMAGE), IMAGE,\n\t\t\tnew Pair<Kind,Type>(Kind.IMAGE_OP,IMAGE), INT\n\t\t\t);\n\t\n\t//Visits the child expression to get the type, then uses the above table to determine the result type\n\t//and check that this node represents a legal combination of operator and expression type. \n\t@Override\n\tpublic Object visitUnaryExpr(UnaryExpr unaryExpr, Object arg) throws Exception {\n\t\t// !, -, getRed, getGreen, getBlue\n\t\tKind op = unaryExpr.getOp().getKind();\n\t\tType exprType = (Type) unaryExpr.getExpr().visit(this, arg);\n\t\t//Use the lookup table above to both check for a legal combination of operator and expression, and to get result type.\n\t\tType resultType = unaryExprs.get(new Pair<Kind,Type>(op,exprType));\n\t\tcheck(resultType != null, unaryExpr, \"incompatible types for unaryExpr\");\n\t\t//Save the type of the unary expression in the AST node for use in code generation later. \n\t\tunaryExpr.setType(resultType);\n\t\t//return the type for convenience in this visitor.\n\t\treturn resultType;\n\t}\n\n\n\t//This method has several cases. Work incrementally and test as you go. \n\t@Override\n\tpublic Object visitBinaryExpr(BinaryExpr binaryExpr, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException(\"Unimplemented visit method.\");\n\t}\n\n\t@Override\n\tpublic Object visitIdentExpr(IdentExpr identExpr, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException(\"Unimplemented visit method.\");\n\t}\n\n\t@Override\n\tpublic Object visitConditionalExpr(ConditionalExpr conditionalExpr, Object arg) throws Exception {\n\t\t//TODO  implement this method\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tpublic Object visitDimension(Dimension dimension, Object arg) throws Exception {\n\t\t//TODO  implement this method\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\t//This method can only be used to check PixelSelector objects on the right hand side of an assignment. \n\t//Either modify to pass in context info and add code to handle both cases, or when on left side\n\t//of assignment, check fields from parent assignment statement.\n\tpublic Object visitPixelSelector(PixelSelector pixelSelector, Object arg) throws Exception {\n\t\tType xType = (Type) pixelSelector.getX().visit(this, arg);\n\t\tcheck(xType == Type.INT, pixelSelector.getX(), \"only ints as pixel selector components\");\n\t\tType yType = (Type) pixelSelector.getY().visit(this, arg);\n\t\tcheck(yType == Type.INT, pixelSelector.getY(), \"only ints as pixel selector components\");\n\t\treturn null;\n\t}\n\n\t@Override\n\t//This method several cases--you don't have to implement them all at once.\n\t//Work incrementally and systematically, testing as you go.  \n\tpublic Object visitAssignmentStatement(AssignmentStatement assignmentStatement, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException(\"Unimplemented visit method.\");\n\t}\n\n\n\t@Override\n\tpublic Object visitWriteStatement(WriteStatement writeStatement, Object arg) throws Exception {\n\t\tType sourceType = (Type) writeStatement.getSource().visit(this, arg);\n\t\tType destType = (Type) writeStatement.getDest().visit(this, arg);\n\t\tcheck(destType == Type.STRING || destType == Type.CONSOLE, writeStatement,\n\t\t\t\t\"illegal destination type for write\");\n\t\tcheck(sourceType != Type.CONSOLE, writeStatement, \"illegal source type for write\");\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic Object visitReadStatement(ReadStatement readStatement, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException(\"Unimplemented visit method.\");\n\t}\n\n\t@Override\n\tpublic Object visitVarDeclaration(VarDeclaration declaration, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException(\"Unimplemented visit method.\");\n\t}\n\n\n\t@Override\n\tpublic Object visitProgram(Program program, Object arg) throws Exception {\t\t\n\t\t//TODO:  this method is incomplete, finish it.  \n\t\t\n\t\t//Save root of AST so return type can be accessed in return statements\n\t\troot = program;\n\t\t\n\t\t//Check declarations and statements\n\t\tList<ASTNode> decsAndStatements = program.getDecsAndStatements();\n\t\tfor (ASTNode node : decsAndStatements) {\n\t\t\tnode.visit(this, arg);\n\t\t}\n\t\treturn program;\n\t}\n\n\t@Override\n\tpublic Object visitNameDef(NameDef nameDef, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tpublic Object visitNameDefWithDim(NameDefWithDim nameDefWithDim, Object arg) throws Exception {\n\t\t//TODO:  implement this method\n\t\tthrow new UnsupportedOperationException();\n\t}\n \n\t@Override\n\tpublic Object visitReturnStatement(ReturnStatement returnStatement, Object arg) throws Exception {\n\t\tType returnType = root.getReturnType();  //This is why we save program in visitProgram.\n\t\tType expressionType = (Type) returnStatement.getExpr().visit(this, arg);\n\t\tcheck(returnType == expressionType, returnStatement, \"return statement with invalid type\");\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic Object visitUnaryExprPostfix(UnaryExprPostfix unaryExprPostfix, Object arg) throws Exception {\n\t\tType expType = (Type) unaryExprPostfix.getExpr().visit(this, arg);\n\t\tcheck(expType == Type.IMAGE, unaryExprPostfix, \"pixel selector can only be applied to image\");\n\t\tunaryExprPostfix.getSelector().visit(this, arg);\n\t\tunaryExprPostfix.setType(Type.INT);\n\t\tunaryExprPostfix.setCoerceTo(COLOR);\n\t\treturn Type.COLOR;\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/edu/ufl/cise/plc/TypeCheckVisitor.java b/src/edu/ufl/cise/plc/TypeCheckVisitor.java
--- a/src/edu/ufl/cise/plc/TypeCheckVisitor.java	(revision 70767c5f548c1cdc60254f9ed0708f41ce556b18)
+++ b/src/edu/ufl/cise/plc/TypeCheckVisitor.java	(date 1647999166181)
@@ -5,33 +5,8 @@
 import java.util.Set;
 
 import edu.ufl.cise.plc.IToken.Kind;
-import edu.ufl.cise.plc.ast.ASTNode;
-import edu.ufl.cise.plc.ast.ASTVisitor;
-import edu.ufl.cise.plc.ast.AssignmentStatement;
-import edu.ufl.cise.plc.ast.BinaryExpr;
-import edu.ufl.cise.plc.ast.BooleanLitExpr;
-import edu.ufl.cise.plc.ast.ColorConstExpr;
-import edu.ufl.cise.plc.ast.ColorExpr;
-import edu.ufl.cise.plc.ast.ConditionalExpr;
-import edu.ufl.cise.plc.ast.ConsoleExpr;
-import edu.ufl.cise.plc.ast.Declaration;
-import edu.ufl.cise.plc.ast.Dimension;
-import edu.ufl.cise.plc.ast.Expr;
-import edu.ufl.cise.plc.ast.FloatLitExpr;
-import edu.ufl.cise.plc.ast.IdentExpr;
-import edu.ufl.cise.plc.ast.IntLitExpr;
-import edu.ufl.cise.plc.ast.NameDef;
-import edu.ufl.cise.plc.ast.NameDefWithDim;
-import edu.ufl.cise.plc.ast.PixelSelector;
-import edu.ufl.cise.plc.ast.Program;
-import edu.ufl.cise.plc.ast.ReadStatement;
-import edu.ufl.cise.plc.ast.ReturnStatement;
-import edu.ufl.cise.plc.ast.StringLitExpr;
+import edu.ufl.cise.plc.ast.*;
 import edu.ufl.cise.plc.ast.Types.Type;
-import edu.ufl.cise.plc.ast.UnaryExpr;
-import edu.ufl.cise.plc.ast.UnaryExprPostfix;
-import edu.ufl.cise.plc.ast.VarDeclaration;
-import edu.ufl.cise.plc.ast.WriteStatement;
 
 import static edu.ufl.cise.plc.ast.Types.Type.*;
 
@@ -139,19 +114,77 @@
 	@Override
 	public Object visitBinaryExpr(BinaryExpr binaryExpr, Object arg) throws Exception {
 		//TODO:  implement this method
-		throw new UnsupportedOperationException("Unimplemented visit method.");
+		Kind op = binaryExpr.getOp().getKind();
+		Type lType = (Type) binaryExpr.getLeft().visit(this, arg);
+		Type rType = (Type) binaryExpr.getRight().visit(this, arg);
+
+		Type resultType = null;
+		switch(op) { // EQUALS, NOT_EQUALS, PLUS, MINUS, TIMES, DIV, MOD, LT, LE, GT, GE
+			case AND, OR -> {
+				check(lType == Type.BOOLEAN && rType == Type.BOOLEAN, binaryExpr, "Booleans required");
+				resultType = Type.BOOLEAN;
+			}
+			case EQUALS, NOT_EQUALS -> {
+				check(lType == rType, binaryExpr, "Incompatible types for comparison");
+				resultType = Type.BOOLEAN;
+			}
+			case PLUS, MINUS -> {
+				if (lType == Type.INT && rType == Type.INT) {
+					resultType = Type.INT;
+				}
+				else if (lType == Type.FLOAT && rType == Type.FLOAT) {
+					resultType = Type.FLOAT;
+				}
+				else if (lType == Type.FLOAT && rType == Type.INT) {
+					// TODO: Coerce to float
+					resultType = Type.FLOAT;
+				}
+				else if (lType == Type.INT && rType == Type.FLOAT) {
+					// TODO: Coerce to float
+					resultType = Type.FLOAT;
+				}
+				else if (lType == Type.COLOR && rType == Type.COLOR) {
+					resultType = Type.COLOR;
+				}
+				else if (lType == Type.COLORFLOAT && rType == Type.COLORFLOAT) {
+					resultType = Type.COLORFLOAT;
+				}
+				else if (lType == Type.COLORFLOAT && rType == Type.COLOR) {
+					// TODO: Coerce to colorfloat
+					resultType = Type.COLORFLOAT;
+				}
+
+				else check(false, binaryExpr, "incompatible types for operator");
+			}
+
+		}
 	}
 
 	@Override
 	public Object visitIdentExpr(IdentExpr identExpr, Object arg) throws Exception {
-		//TODO:  implement this method
-		throw new UnsupportedOperationException("Unimplemented visit method.");
+		String name = identExpr.getText();
+		Declaration dec = symbolTable.lookup(name);
+		check(dec != null, identExpr, "Undefined identifier " + name);
+		check(dec.isInitialized(), identExpr, "Uninitialized identifier used: " + name);
+
+		identExpr.setDec(dec); // Useful later, apparently
+
+		Type type = dec.getType();
+		identExpr.setType(type);
+		return type;
 	}
 
 	@Override
 	public Object visitConditionalExpr(ConditionalExpr conditionalExpr, Object arg) throws Exception {
-		//TODO  implement this method
-		throw new UnsupportedOperationException();
+		Type conditionCase = (Type) symbolTable.lookup(conditionalExpr.getCondition().getText()).visit(this, arg);
+		Type trueCase = (Type) symbolTable.lookup(conditionalExpr.getTrueCase().getText()).visit(this, arg);
+		Type falseCase = (Type) symbolTable.lookup(conditionalExpr.getFalseCase().getText()).visit(this, arg);
+
+		check(conditionCase == Type.BOOLEAN, conditionalExpr, "Condition case must be boolean");
+		check(trueCase == falseCase, conditionalExpr, "True case must equal false case");
+
+		conditionalExpr.setType(trueCase);
+		return trueCase;
 	}
 
 	@Override
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ef58fd28-b9f4-4d89-a35f-7b258833c9de\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTNode.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTNode.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTVisitor.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTVisitor.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/AssignmentStatement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/AssignmentStatement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BinaryExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BinaryExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BooleanLitExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BooleanLitExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorConstExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorConstExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConditionalExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConditionalExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConsoleExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConsoleExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Declaration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Declaration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Dimension.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Dimension.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Expr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Expr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/FloatLitExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/FloatLitExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IdentExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IdentExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IntLitExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IntLitExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDef.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDef.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDefWithDim.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDefWithDim.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/PixelSelector.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/PixelSelector.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Program.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Program.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReadStatement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReadStatement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReturnStatement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReturnStatement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Statement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Statement.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/StringLitExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/StringLitExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Types.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Types.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExpr.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExpr.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExprPostfix.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExprPostfix.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/VarDeclaration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/VarDeclaration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/WriteStatement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/WriteStatement.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeStyleSettingsInfer\">\n    <option name=\"done\" value=\"true\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"ProjectId\" id=\"26lG92QAwg8qiss9K3DqR5ZfhFI\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Assignment3StarterTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"COP4020Project\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"edu.ufl.cise.plc.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"edu.ufl.cise.plc\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"edu.ufl.cise.plc.Assignment3StarterTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.Assignment3StarterTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ef58fd28-b9f4-4d89-a35f-7b258833c9de\" name=\"Changes\" comment=\"\" />\n      <created>1647990604776</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1647990604776</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 70767c5f548c1cdc60254f9ed0708f41ce556b18)
+++ b/.idea/workspace.xml	(date 1648014204514)
@@ -5,35 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ef58fd28-b9f4-4d89-a35f-7b258833c9de" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTNode.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTNode.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ASTVisitor.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/AssignmentStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/AssignmentStatement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BinaryExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BinaryExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BooleanLitExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/BooleanLitExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorConstExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorConstExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ColorExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConditionalExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConditionalExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConsoleExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ConsoleExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Declaration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Declaration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Dimension.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Dimension.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Expr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Expr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/FloatLitExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/FloatLitExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IdentExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IdentExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IntLitExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/IntLitExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDef.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDef.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDefWithDim.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/NameDefWithDim.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/PixelSelector.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/PixelSelector.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Program.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Program.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReadStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReadStatement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReturnStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/ReturnStatement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Statement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Statement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/StringLitExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/StringLitExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Types.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/Types.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExpr.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExpr.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExprPostfix.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/UnaryExprPostfix.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/VarDeclaration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/VarDeclaration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/WriteStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/ast/WriteStatement.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/SymbolTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/SymbolTable.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/edu/ufl/cise/plc/TypeCheckVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/edu/ufl/cise/plc/TypeCheckVisitor.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -68,8 +42,9 @@
     <property name="project.structure.last.edited" value="Libraries" />
     <property name="project.structure.proportion" value="0.15" />
     <property name="project.structure.side.proportion" value="0.2" />
+    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="JUnit.StarterTests">
     <configuration name="Assignment3StarterTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="COP4020Project" />
       <extension name="coverage">
@@ -85,8 +60,41 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="StarterTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="COP4020Project" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="edu.ufl.cise.plc.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="edu.ufl.cise.plc" />
+      <option name="MAIN_CLASS_NAME" value="edu.ufl.cise.plc.StarterTests" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="StarterTests.test32" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="COP4020Project" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="edu.ufl.cise.plc.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="edu.ufl.cise.plc" />
+      <option name="MAIN_CLASS_NAME" value="edu.ufl.cise.plc.StarterTests" />
+      <option name="METHOD_NAME" value="test32(org.junit.jupiter.api.TestInfo)" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.StarterTests" />
+        <item itemvalue="JUnit.StarterTests.test32" />
         <item itemvalue="JUnit.Assignment3StarterTest" />
       </list>
     </recent_temporary>
@@ -102,4 +110,15 @@
     </task>
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
